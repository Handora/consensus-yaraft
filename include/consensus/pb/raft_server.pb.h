// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: raft_server.proto

#ifndef PROTOBUF_raft_5fserver_2eproto__INCLUDED
#define PROTOBUF_raft_5fserver_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
#include "yaraft/pb/raftpb.pb.h"
// @@protoc_insertion_point(includes)

namespace consensus {
namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_raft_5fserver_2eproto();
void protobuf_AssignDesc_raft_5fserver_2eproto();
void protobuf_ShutdownFile_raft_5fserver_2eproto();

class StepRequest;
class StepResponse;
class StatusRequest;
class StatusResponse;

enum StatusCode {
  OK = 0,
  StepLocalMsg = 1,
  StepPeerNotFound = 2
};
bool StatusCode_IsValid(int value);
const StatusCode StatusCode_MIN = OK;
const StatusCode StatusCode_MAX = StepPeerNotFound;
const int StatusCode_ARRAYSIZE = StatusCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* StatusCode_descriptor();
inline const ::std::string& StatusCode_Name(StatusCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    StatusCode_descriptor(), value);
}
inline bool StatusCode_Parse(
    const ::std::string& name, StatusCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StatusCode>(
    StatusCode_descriptor(), name, value);
}
// ===================================================================

class StepRequest : public ::google::protobuf::Message {
 public:
  StepRequest();
  virtual ~StepRequest();

  StepRequest(const StepRequest& from);

  inline StepRequest& operator=(const StepRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StepRequest& default_instance();

  void Swap(StepRequest* other);

  // implements Message ----------------------------------------------

  StepRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StepRequest& from);
  void MergeFrom(const StepRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .yaraft.pb.Message message = 1;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 1;
  inline const ::yaraft::pb::Message& message() const;
  inline ::yaraft::pb::Message* mutable_message();
  inline ::yaraft::pb::Message* release_message();
  inline void set_allocated_message(::yaraft::pb::Message* message);

  // @@protoc_insertion_point(class_scope:consensus.pb.StepRequest)
 private:
  inline void set_has_message();
  inline void clear_has_message();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::yaraft::pb::Message* message_;
  friend void  protobuf_AddDesc_raft_5fserver_2eproto();
  friend void protobuf_AssignDesc_raft_5fserver_2eproto();
  friend void protobuf_ShutdownFile_raft_5fserver_2eproto();

  void InitAsDefaultInstance();
  static StepRequest* default_instance_;
};
// -------------------------------------------------------------------

class StepResponse : public ::google::protobuf::Message {
 public:
  StepResponse();
  virtual ~StepResponse();

  StepResponse(const StepResponse& from);

  inline StepResponse& operator=(const StepResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StepResponse& default_instance();

  void Swap(StepResponse* other);

  // implements Message ----------------------------------------------

  StepResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StepResponse& from);
  void MergeFrom(const StepResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .consensus.pb.StatusCode code = 1;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 1;
  inline ::consensus::pb::StatusCode code() const;
  inline void set_code(::consensus::pb::StatusCode value);

  // @@protoc_insertion_point(class_scope:consensus.pb.StepResponse)
 private:
  inline void set_has_code();
  inline void clear_has_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int code_;
  friend void  protobuf_AddDesc_raft_5fserver_2eproto();
  friend void protobuf_AssignDesc_raft_5fserver_2eproto();
  friend void protobuf_ShutdownFile_raft_5fserver_2eproto();

  void InitAsDefaultInstance();
  static StepResponse* default_instance_;
};
// -------------------------------------------------------------------

class StatusRequest : public ::google::protobuf::Message {
 public:
  StatusRequest();
  virtual ~StatusRequest();

  StatusRequest(const StatusRequest& from);

  inline StatusRequest& operator=(const StatusRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StatusRequest& default_instance();

  void Swap(StatusRequest* other);

  // implements Message ----------------------------------------------

  StatusRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StatusRequest& from);
  void MergeFrom(const StatusRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:consensus.pb.StatusRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_raft_5fserver_2eproto();
  friend void protobuf_AssignDesc_raft_5fserver_2eproto();
  friend void protobuf_ShutdownFile_raft_5fserver_2eproto();

  void InitAsDefaultInstance();
  static StatusRequest* default_instance_;
};
// -------------------------------------------------------------------

class StatusResponse : public ::google::protobuf::Message {
 public:
  StatusResponse();
  virtual ~StatusResponse();

  StatusResponse(const StatusResponse& from);

  inline StatusResponse& operator=(const StatusResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StatusResponse& default_instance();

  void Swap(StatusResponse* other);

  // implements Message ----------------------------------------------

  StatusResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StatusResponse& from);
  void MergeFrom(const StatusResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 leader = 1;
  inline bool has_leader() const;
  inline void clear_leader();
  static const int kLeaderFieldNumber = 1;
  inline ::google::protobuf::uint64 leader() const;
  inline void set_leader(::google::protobuf::uint64 value);

  // optional uint64 raftIndex = 2;
  inline bool has_raftindex() const;
  inline void clear_raftindex();
  static const int kRaftIndexFieldNumber = 2;
  inline ::google::protobuf::uint64 raftindex() const;
  inline void set_raftindex(::google::protobuf::uint64 value);

  // optional uint64 raftTerm = 3;
  inline bool has_raftterm() const;
  inline void clear_raftterm();
  static const int kRaftTermFieldNumber = 3;
  inline ::google::protobuf::uint64 raftterm() const;
  inline void set_raftterm(::google::protobuf::uint64 value);

  // optional uint64 raftCommit = 4;
  inline bool has_raftcommit() const;
  inline void clear_raftcommit();
  static const int kRaftCommitFieldNumber = 4;
  inline ::google::protobuf::uint64 raftcommit() const;
  inline void set_raftcommit(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:consensus.pb.StatusResponse)
 private:
  inline void set_has_leader();
  inline void clear_has_leader();
  inline void set_has_raftindex();
  inline void clear_has_raftindex();
  inline void set_has_raftterm();
  inline void clear_has_raftterm();
  inline void set_has_raftcommit();
  inline void clear_has_raftcommit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 leader_;
  ::google::protobuf::uint64 raftindex_;
  ::google::protobuf::uint64 raftterm_;
  ::google::protobuf::uint64 raftcommit_;
  friend void  protobuf_AddDesc_raft_5fserver_2eproto();
  friend void protobuf_AssignDesc_raft_5fserver_2eproto();
  friend void protobuf_ShutdownFile_raft_5fserver_2eproto();

  void InitAsDefaultInstance();
  static StatusResponse* default_instance_;
};
// ===================================================================

class RaftService_Stub;

class RaftService : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline RaftService() {};
 public:
  virtual ~RaftService();

  typedef RaftService_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void Step(::google::protobuf::RpcController* controller,
                       const ::consensus::pb::StepRequest* request,
                       ::consensus::pb::StepResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void Status(::google::protobuf::RpcController* controller,
                       const ::consensus::pb::StatusRequest* request,
                       ::consensus::pb::StatusResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(RaftService);
};

class RaftService_Stub : public RaftService {
 public:
  RaftService_Stub(::google::protobuf::RpcChannel* channel);
  RaftService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~RaftService_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements RaftService ------------------------------------------

  void Step(::google::protobuf::RpcController* controller,
                       const ::consensus::pb::StepRequest* request,
                       ::consensus::pb::StepResponse* response,
                       ::google::protobuf::Closure* done);
  void Status(::google::protobuf::RpcController* controller,
                       const ::consensus::pb::StatusRequest* request,
                       ::consensus::pb::StatusResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(RaftService_Stub);
};


// ===================================================================


// ===================================================================

// StepRequest

// required .yaraft.pb.Message message = 1;
inline bool StepRequest::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StepRequest::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StepRequest::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StepRequest::clear_message() {
  if (message_ != NULL) message_->::yaraft::pb::Message::Clear();
  clear_has_message();
}
inline const ::yaraft::pb::Message& StepRequest::message() const {
  // @@protoc_insertion_point(field_get:consensus.pb.StepRequest.message)
  return message_ != NULL ? *message_ : *default_instance_->message_;
}
inline ::yaraft::pb::Message* StepRequest::mutable_message() {
  set_has_message();
  if (message_ == NULL) message_ = new ::yaraft::pb::Message;
  // @@protoc_insertion_point(field_mutable:consensus.pb.StepRequest.message)
  return message_;
}
inline ::yaraft::pb::Message* StepRequest::release_message() {
  clear_has_message();
  ::yaraft::pb::Message* temp = message_;
  message_ = NULL;
  return temp;
}
inline void StepRequest::set_allocated_message(::yaraft::pb::Message* message) {
  delete message_;
  message_ = message;
  if (message) {
    set_has_message();
  } else {
    clear_has_message();
  }
  // @@protoc_insertion_point(field_set_allocated:consensus.pb.StepRequest.message)
}

// -------------------------------------------------------------------

// StepResponse

// required .consensus.pb.StatusCode code = 1;
inline bool StepResponse::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StepResponse::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StepResponse::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StepResponse::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::consensus::pb::StatusCode StepResponse::code() const {
  // @@protoc_insertion_point(field_get:consensus.pb.StepResponse.code)
  return static_cast< ::consensus::pb::StatusCode >(code_);
}
inline void StepResponse::set_code(::consensus::pb::StatusCode value) {
  assert(::consensus::pb::StatusCode_IsValid(value));
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:consensus.pb.StepResponse.code)
}

// -------------------------------------------------------------------

// StatusRequest

// -------------------------------------------------------------------

// StatusResponse

// optional uint64 leader = 1;
inline bool StatusResponse::has_leader() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StatusResponse::set_has_leader() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StatusResponse::clear_has_leader() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StatusResponse::clear_leader() {
  leader_ = GOOGLE_ULONGLONG(0);
  clear_has_leader();
}
inline ::google::protobuf::uint64 StatusResponse::leader() const {
  // @@protoc_insertion_point(field_get:consensus.pb.StatusResponse.leader)
  return leader_;
}
inline void StatusResponse::set_leader(::google::protobuf::uint64 value) {
  set_has_leader();
  leader_ = value;
  // @@protoc_insertion_point(field_set:consensus.pb.StatusResponse.leader)
}

// optional uint64 raftIndex = 2;
inline bool StatusResponse::has_raftindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StatusResponse::set_has_raftindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StatusResponse::clear_has_raftindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StatusResponse::clear_raftindex() {
  raftindex_ = GOOGLE_ULONGLONG(0);
  clear_has_raftindex();
}
inline ::google::protobuf::uint64 StatusResponse::raftindex() const {
  // @@protoc_insertion_point(field_get:consensus.pb.StatusResponse.raftIndex)
  return raftindex_;
}
inline void StatusResponse::set_raftindex(::google::protobuf::uint64 value) {
  set_has_raftindex();
  raftindex_ = value;
  // @@protoc_insertion_point(field_set:consensus.pb.StatusResponse.raftIndex)
}

// optional uint64 raftTerm = 3;
inline bool StatusResponse::has_raftterm() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StatusResponse::set_has_raftterm() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StatusResponse::clear_has_raftterm() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StatusResponse::clear_raftterm() {
  raftterm_ = GOOGLE_ULONGLONG(0);
  clear_has_raftterm();
}
inline ::google::protobuf::uint64 StatusResponse::raftterm() const {
  // @@protoc_insertion_point(field_get:consensus.pb.StatusResponse.raftTerm)
  return raftterm_;
}
inline void StatusResponse::set_raftterm(::google::protobuf::uint64 value) {
  set_has_raftterm();
  raftterm_ = value;
  // @@protoc_insertion_point(field_set:consensus.pb.StatusResponse.raftTerm)
}

// optional uint64 raftCommit = 4;
inline bool StatusResponse::has_raftcommit() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StatusResponse::set_has_raftcommit() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StatusResponse::clear_has_raftcommit() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StatusResponse::clear_raftcommit() {
  raftcommit_ = GOOGLE_ULONGLONG(0);
  clear_has_raftcommit();
}
inline ::google::protobuf::uint64 StatusResponse::raftcommit() const {
  // @@protoc_insertion_point(field_get:consensus.pb.StatusResponse.raftCommit)
  return raftcommit_;
}
inline void StatusResponse::set_raftcommit(::google::protobuf::uint64 value) {
  set_has_raftcommit();
  raftcommit_ = value;
  // @@protoc_insertion_point(field_set:consensus.pb.StatusResponse.raftCommit)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace consensus

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::consensus::pb::StatusCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::consensus::pb::StatusCode>() {
  return ::consensus::pb::StatusCode_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_raft_5fserver_2eproto__INCLUDED
