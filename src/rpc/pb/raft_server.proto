syntax = "proto2";

package consensus.rpc.pb;

import "yaraft/pb/raftpb.proto";

option cc_generic_services = true;
option java_generic_services = true;
option py_generic_services = true;

enum StatusCode {
    OK = 0;

    StepLocalMsg = 1;
    StepPeerNotFound = 2;
}

message StepRequest {
    // The message that drives the RaftServer to perform RawNode::Step.
    required yaraft.pb.Message message = 1;
}

message StepResponse {
    required StatusCode code = 1;
}

message TickRequest {
    // The number of ticks elapsed which drives the RaftServer to perform RawNode::Tick.
    required uint32 ticks = 2;
}

message TickResponse {
}

message StatusRequest {
}

message StatusResponse {
    // leader is the member ID which the responding member believes is the current leader.
    optional uint64 leader = 4;
    // raftIndex is the current raft index of the responding member.
    optional uint64 raftIndex = 5;
    // raftTerm is the current raft term of the responding member.
    optional uint64 raftTerm = 6;
}

service RaftService {
    rpc Step (StepRequest) returns (StepResponse);
    rpc Tick (TickRequest) returns (TickResponse);
    rpc Status (StatusRequest) returns (StatusResponse);
}